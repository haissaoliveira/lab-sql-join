-- List the number of films per category.
SELECT C.CATEGORY_ID, C.NAME, COUNT(FC.FILM_ID) AS FILM_PER_CATEGORY
FROM SAKILA.CATEGORY C
LEFT JOIN SAKILA.FILM_CATEGORY FC
ON C.CATEGORY_ID = FC.CATEGORY_ID
GROUP BY 1,2
ORDER BY 3;

-- Display the first and the last names, as well as the address, of each staff member.

SELECT  A.ADDRESS, S.FIRST_NAME, S.LAST_NAME
FROM SAKILA.ADDRESS A
LEFT JOIN SAKILA.STAFF S
ON A.ADDRESS_ID = S.ADDRESS_ID
WHERE S.FIRST_NAME <> ' ';

-- Display the total amount rung up by each staff member in August 2005.
SELECT *
FROM SAKILA.STAFF S
LEFT JOIN SAKILA.PAYMENT P
ON S.STAFF_ID = P.STAFF_ID;

SELECT S.STAFF_ID, SUM(P.AMOUNT) AS TOTAL_AMOUNT
FROM SAKILA.STAFF S
LEFT JOIN SAKILA.PAYMENT P
ON S.STAFF_ID = P.STAFF_ID
WHERE P.PAYMENT_DATE BETWEEN '2005-08-01' AND '2005-08-30'
GROUP BY 1
ORDER BY 2;

-- List all films and the number of actors who are listed for each film.
SELECT *
FROM SAKILA.ACTOR A
LEFT JOIN SAKILA.FILM_ACTOR FA
ON A.ACTOR_ID = FA.ACTOR_ID;

SELECT FA.FILM_ID, SUM(A.ACTOR_ID) AS ACTOR_PER_FILM
FROM SAKILA.ACTOR A
LEFT JOIN SAKILA.FILM_ACTOR FA
ON A.ACTOR_ID = FA.ACTOR_ID
GROUP BY 1
ORDER BY 2 DESC;

-- Using the payment and the customer tables as well as the JOIN command, list the total amount paid by each customer.
-- List the customers alphabetically by their last names.
SELECT *
FROM SAKILA.PAYMENT P
LEFT JOIN SAKILA.CUSTOMER C
ON P.CUSTOMER_ID = C.CUSTOMER_ID;

SELECT P.CUSTOMER_ID, C.LAST_NAME, SUM(P.AMOUNT) AS TOTAL_AMOUNT
FROM SAKILA.PAYMENT P
LEFT JOIN SAKILA.CUSTOMER C
ON P.CUSTOMER_ID = C.CUSTOMER_ID
GROUP BY 1
ORDER BY 2 ASC;




